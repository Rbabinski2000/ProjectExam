// <auto-generated />
using Infrastracture.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240510173732_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastracture.Entities.CountryEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("country_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Infrastracture.Entities.Ranking_criteriaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("criteria_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ranking_system_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ranking_system_id");

                    b.ToTable("ranking_Criterias");
                });

            modelBuilder.Entity("Infrastracture.Entities.Ranking_systemEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("system_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ranking_Systems");
                });

            modelBuilder.Entity("Infrastracture.Entities.UniversityEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("country_id")
                        .HasColumnType("integer");

                    b.Property<string>("university_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("country_id");

                    b.ToTable("universities");
                });

            modelBuilder.Entity("Infrastracture.Entities.University_ranking_yearEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ranking_criteria_id")
                        .HasColumnType("integer");

                    b.Property<int>("score")
                        .HasColumnType("integer");

                    b.Property<int>("university_id")
                        .HasColumnType("integer");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ranking_criteria_id");

                    b.HasIndex("university_id");

                    b.ToTable("university_rankings");
                });

            modelBuilder.Entity("Infrastracture.Entities.University_yearEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("num_students")
                        .HasColumnType("integer");

                    b.Property<int>("pct_female_students")
                        .HasColumnType("integer");

                    b.Property<int>("pct_international_students")
                        .HasColumnType("integer");

                    b.Property<int>("student_staff_ratio")
                        .HasColumnType("integer");

                    b.Property<int>("university_id")
                        .HasColumnType("integer");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("university_id");

                    b.ToTable("university_Years");
                });

            modelBuilder.Entity("Infrastracture.Entities.Ranking_criteriaEntity", b =>
                {
                    b.HasOne("Infrastracture.Entities.Ranking_systemEntity", "ranking_system")
                        .WithMany("ranking_Criterias")
                        .HasForeignKey("ranking_system_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ranking_system");
                });

            modelBuilder.Entity("Infrastracture.Entities.UniversityEntity", b =>
                {
                    b.HasOne("Infrastracture.Entities.CountryEntity", "country")
                        .WithMany("university")
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("Infrastracture.Entities.University_ranking_yearEntity", b =>
                {
                    b.HasOne("Infrastracture.Entities.Ranking_criteriaEntity", "ranking_criteria")
                        .WithMany("University_Ranking_Years")
                        .HasForeignKey("ranking_criteria_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastracture.Entities.UniversityEntity", "university")
                        .WithMany("university_ranking_years")
                        .HasForeignKey("university_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ranking_criteria");

                    b.Navigation("university");
                });

            modelBuilder.Entity("Infrastracture.Entities.University_yearEntity", b =>
                {
                    b.HasOne("Infrastracture.Entities.UniversityEntity", "university")
                        .WithMany("university_years")
                        .HasForeignKey("university_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("university");
                });

            modelBuilder.Entity("Infrastracture.Entities.CountryEntity", b =>
                {
                    b.Navigation("university");
                });

            modelBuilder.Entity("Infrastracture.Entities.Ranking_criteriaEntity", b =>
                {
                    b.Navigation("University_Ranking_Years");
                });

            modelBuilder.Entity("Infrastracture.Entities.Ranking_systemEntity", b =>
                {
                    b.Navigation("ranking_Criterias");
                });

            modelBuilder.Entity("Infrastracture.Entities.UniversityEntity", b =>
                {
                    b.Navigation("university_ranking_years");

                    b.Navigation("university_years");
                });
#pragma warning restore 612, 618
        }
    }
}
